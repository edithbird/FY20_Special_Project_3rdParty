mutate(Name = paste0(Last.Name, ", ", First.Name)) %>%
group_by(Student.Stage,TargetX_SRMb__Status__c,  Email, Created.Date, Ref__c, Recruiting_Category__c,Recruiting.Category, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n())
trythis1 <- trythis %>% group_by(Primary_State_Code__c) %>% summarise(Inqs = n())
trythis1 %>% mutate(Recruiting.Category_Geo = ifelse(Primary_State_Code__c == "ME", "In_State", "Out-Of-State")) %>% group_by(Recruiting.Category_Geo) %>% summarise(Inqs = sum(Inqs))
write.csv(trythis,"C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/Junior_Conversions/_3-13-20_DeDuped", row.names = F)
write.csv(trythis,"C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/Junior_Conversions/Conversions_3-13-20_DeDuped", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-03
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c = 2020")
queried_records <- sf_query(my_soql)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
names(LeadsUploaded)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n()) %>% filter(n>1)
trythis <- merge(LeadsUploaded, queried_records, by = "Email" )
trythis <- trythis %>% mutate(DateCollected = Sys.Date())
trythis
# Don't forget to change the date!
write.csv(trythis,"C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/Senior_Conversions/Conversions_3-13-20_DeDuped", row.names = F)
trythis %>%
#filter(Student.Stage == "Lead") %>%
mutate(Name = paste0(Last.Name, ", ", First.Name)) %>%
group_by(Student.Stage,TargetX_SRMb__Status__c,  Email, Created.Date, Ref__c, Recruiting_Category__c,Recruiting.Category, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n())
trythis1 <- trythis %>% group_by(Primary_State_Code__c) %>% summarise(Inqs = n())
trythis1 %>% mutate(Recruiting.Category_Geo = ifelse(Primary_State_Code__c == "ME", "In_State", "Out-Of-State")) %>% group_by(Recruiting.Category_Geo) %>% summarise(Inqs = sum(Inqs))
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
names(LeadsUploaded)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n()) %>% filter(n>1)
trythis <- merge(LeadsUploaded, queried_records, by = "Email" )
trythis <- trythis %>% mutate(DateCollected = Sys.Date())
trythis
trythis %>%
#filter(Student.Stage == "Lead") %>%
mutate(Name = paste0(Last.Name, ", ", First.Name)) %>%
group_by(Student.Stage,TargetX_SRMb__Status__c,  Email, Created.Date, Ref__c, Recruiting_Category__c,Recruiting.Category, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n())
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-12
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c = 2021")
queried_records <- sf_query(my_soql)
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_January_Search/FA20_Senior/FA20_Search_Jan2020_SR.csv", header = T, stringsAsFactors = F)
names(LeadsUploaded)
dim(LeadsUploaded)
LeadsUploaded %>% group_by(Email, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n()) %>% filter(n>1)
trythis <- merge(LeadsUploaded, queried_records, by = "Email" )
trythis <- trythis %>% mutate(DateCollected = Sys.Date())
trythis
# Don't forget to change the date!
trythis %>%
#filter(Student.Stage == "Lead") %>%
mutate(Name = paste0(Last.Name, ", ", First.Name)) %>%
group_by(Student.Stage,TargetX_SRMb__Status__c,  Email, Created.Date, Ref__c, Recruiting_Category__c,Recruiting.Category, Lead.Segment.College.Board, Lead.Segment.NRCCUA) %>% summarise(n = n())
LeadsUploaded <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
head(LeadsUploaded)
dim(LeadsUploaded)
unique(LeadsUploaded$Anticipated.Start.Year)
unique(LeadsUploaded$Lead.Segment.College.Board)
library(dplyr)
LeadsUploaded1 <- LeadsUploaded %>% mutate(initialLeadCategory = ifelse(grepl('^;', Lead.Segment.College.Board), paste0(Lead.Segment.NRCCUA, "then", Lead.Segment.College.Board), paste0(Lead.Segment.College.Board, "then", Lead.Segment.NRCCUA)))
unique(LeadsUploaded1$initialLeadCategory)
LeadsUploaded1 <- LeadsUploaded %>%
mutate(initialLeadCategory = ifelse(grepl('^;', Lead.Segment.College.Board), paste0("NRCCUA", "CB")))
unique(LeadsUploaded1$initialLeadCategory)
LeadsUploaded1 <- LeadsUploaded %>%
mutate(initialLeadCategory = ifelse(grepl('^;', Lead.Segment.College.Board), paste0("NRCCUA", "CB")))
unique(LeadsUploaded1$initialLeadCategory)
LeadsUploaded1 <- LeadsUploaded %>%
mutate(initialLeadCategory = ifelse(grepl('^;', Lead.Segment.College.Board), "NRCCUA", "CB")))
LeadsUploaded1 <- LeadsUploaded %>%
mutate(initialLeadCategory = ifelse(grepl('^;', Lead.Segment.College.Board), "NRCCUA", "CB"))
unique(LeadsUploaded1$initialLeadCategory)
LeadsUploaded1 %>% group_by(initialLeadCategory) %>% summarise(n = n())
setwd("C:/Users/christine.iyer/Box/FY20_Inquiries/FY20_SpecialUpdate_3rdPartyInquiries")
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(knitr)
library(janitor)
library(tidyr)
library(zoo)
library(lubridate)
library(hms)
library(dplyr)
library(ggplot2)
library(gtable)
library(grid)
library(ggpubr)
library(kableExtra)
library(scales)
#FM <- read.csv("C:/Users/christine.iyer/Downloads/MKT_output.csv", header = T, stringsAsFactors = F)
#FM <-  read.csv("file:///C:/Users/christine.iyer/Box/FM/MKT_output.csv", header = T, stringsAsFactors = F)
FM <- read.csv("file:///Z:/DAA/Marketing/MKT_output.csv", header = T, stringsAsFactors = F)
FM <- FM %>% filter(Master_Adname_Type == "NC")
FM <- FM %>% select(1:8, 13, 15:19, 21:24, 26, 28:29, 31:39) %>% select(Master_Date, everything())
#FM <- FM %>% mutate_at(9:30, ~replace(., is.na(.), 0)) %>% mutate(Master_Date = as.Date(Master_Date, format = "%m/%d/%Y")) %>% arrange(Master_Date)
FM <- FM %>% mutate_at(10:30, ~replace(., is.na(.), 0)) %>% mutate(Master_Date = as.Date(Master_Date, format = "%Y-%m-%d")) %>% arrange(Master_Date) %>% filter(Master_Date > "2019-11-30")
FMW <- FM %>%
#mutate(Week = cut(Master_Date + 2, "week")
#                                     , with_year = FALSE, fiscal_start = 7
#                                      , Vendor_Medium = paste0(Code_Medium, "_", Code_Vendor)) %>%
group_by(Week = cut(Master_Date + 1, "week"), Code_Vendor, Code_Medium, Code_Product, Code_Audience) %>%
summarise(
Cost = sum(Master_Cost),
Clicks = sum(Master_Clicks),
Impressions = round(sum(Master_Impressions),0),
#CTR = paste0(round(Clicks/Impressions * 100, 2), "%"),
Bounces = sum(Master_Bounces),
Sessions = sum(Master_Sessions),
UPV = sum(Master_Unique_Pageviews),
Views = sum(Master_Views),
Completions = sum(Master_Completions),
#BounceRate = paste0(round(Bounces/Sessions * 100, 2), "%"),
Step1 = sum(Master_Time_On_Page)/(sum(Master_Pageviews)- sum(Master_Exits)),
Av_TOP = round_hms(as.hms(Step1), 5),
ClickRatePct = round(Clicks/Impressions * 100, 2),
BounceRatePct = round(Bounces/Sessions * 100, 2),
ViewRate = round(Views/Impressions * 100, 2),
VTR = round(Completions/Impressions *100, 2),
ClickableCompletions = sum(Master_Clickable_Completions),
ClickableCompRate = round(Clicks/ClickableCompletions * 100, 2),
Swipes = sum(Master_Swipes),
SwipeUpRatePct = round(Swipes/Impressions * 100, 2),
Opens = sum(Master_Clicks_To_Site),
CTOR = round(Opens/Clicks * 100, 2),
Sends = sum(Master_Sends),
LIOpens = sum(Master_Opens),
OpenRate = round(LIOpens/Sends * 100, 2))
colorP <- c("#F6A704", "#0E1033","#4E7B14","#A92007","#D47E0A")
FMVM <- FM %>%
mutate(Product_Audience = paste0(Code_Product, "_", Code_Audience)) %>%
group_by(Code_Audience,Code_Product, Code_Vendor, Code_Medium,Week =cut(Master_Date + 1, "week")) %>%
summarise(
Cost = sum(Master_Cost),
Clicks = sum(Master_Clicks),
Impressions = round(sum(Master_Impressions),0),
#CTR = paste0(round(Clicks/Impressions * 100, 2), "%"),
Bounces = sum(Master_Bounces),
Sessions = sum(Master_Sessions),
UPV = sum(Master_Unique_Pageviews),
Views = sum(Master_Views),
Completions = sum(Master_Completions),
#BounceRate = paste0(round(Bounces/Sessions * 100, 2), "%"),
Step1 = sum(Master_Time_On_Page)/(sum(Master_Pageviews)- sum(Master_Exits)),
Av_TOP = round_hms(as.hms(Step1), 5),
ClickRatePct = round(Clicks/Impressions * 100, 2),
BounceRatePct = round(Bounces/Sessions * 100, 2),
ViewRate = round(Views/Impressions * 100, 2),
VTR = round(Completions/Impressions *100, 2),
ClickableCompletions = sum(Master_Clickable_Completions),
ClickableCompRate = round(Clicks/ClickableCompletions * 100, 2),
Swipes = sum(Master_Swipes),
SwipeUpRatePct = round(Swipes/Impressions * 100, 2),
Opens = sum(Master_Clicks_To_Site),
CTOR = round(Opens/Clicks * 100, 2),
Sends = sum(Master_Sends),
LIOpens = sum(Master_Opens),
LIClicks = sum(Master_Clicks_Sponsored_InMail),
OpenRate = round(LIOpens/Sends * 100, 2),
Engagements = sum(as.numeric(Master_Engagements)),
EngagementRate = round(Engagements/Impressions * 100, 2),
EngRate = round((sum(LIOpens)+sum(Engagements))/sum(Sends)*100, 2),
LICTOR = round(sum(LIClicks)/sum(LIOpens) * 100, 2)) %>%
select(Week, Impressions, Clicks, Bounces, Sessions, Swipes, ClickRatePct, SwipeUpRatePct, UPV, BounceRatePct, Av_TOP, ClickableCompRate, VTR, CTOR,OpenRate, Sends, ViewRate, ClickableCompletions, Completions, Opens, LIOpens, LIClicks, Engagements, LICTOR, EngRate, EngagementRate)
IGD <- FMVM %>%
filter(Code_Vendor == "FB" & Code_Medium == "DISP" & Code_Product == "MPH") %>%
mutate(Week = as.Date(Week))
YTD <- IGD %>%
mutate(ReportingPeriod = "YTD") %>%
group_by(Code_Audience, ReportingPeriod) %>%
summarise(YTD_Imp = round(sum(Impressions),0),
Avg_CTR = paste0(round(sum(Clicks)/sum(Impressions) * 100, 2), "%"),
YTD_UPV = round(sum(UPV),0),
Avg_BR = paste0(round(sum(Bounces)/sum(Sessions) * 100, 2), "%"))
thisWk <- IGD %>%
filter(Impressions >= 1000) %>%
filter(Week == max(Week)) %>%
mutate(Week = as.character(Week)) %>%
group_by(Code_Audience, Week) %>%
summarise(Impressions = round(sum(Impressions),0),
CTR = paste0(round(sum(Clicks)/sum(Impressions) * 100, 2), "%"),
UPV = round(sum(UPV),0),
BR = paste0(round(sum(Bounces)/sum(Sessions) * 100, 2), "%"))
abcde <- merge.data.frame(thisWk,YTD,  by = "Code_Audience")
abcde <- abcde %>% select(Week,Impressions, CTR, UPV, BR, YTD_Imp, Avg_CTR, YTD_UPV, Avg_BR )
PGCTR <- IGD %>%
ggplot(aes(x = Week, y = ClickRatePct , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank()) +
geom_hline(yintercept = c(0.45,0.73), linetype="dashed")
PGImp <- IGD %>%
ggplot(aes(x = Week, y = Impressions , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black")) +
theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())
PGUPV <- IGD %>%
ggplot(aes(x = Week, y = UPV , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
PGBR <- IGD %>%
ggplot(aes(x = Week, y = BounceRatePct , color = Code_Audience)) +
geom_line(size = 1.2) +
scale_color_manual(values = colorP) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
theme(axis.title.x=element_blank(),panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),axis.ticks.x=element_blank())
a <- ggarrange(PGImp, PGCTR, PGUPV, PGBR, ncol=4, nrow=1, common.legend = TRUE, legend="right")
annotate_figure(a, text_grob(paste0( IGD$Code_Vendor, "_ ", IGD$Code_Medium, "_ ", IGD$Code_Product), color = "darkblue", face = "plain", size = 18, just = "right"))
kable(abcde) %>%
kable_styling("striped", full_width = T) %>%
add_header_above(c("This Week" = 4, "Since Inception" = 4))
kable(abcde) %>%
kable_styling("striped", full_width = T) %>%
add_header_above(c("This Week" = 5, "Since Inception" = 4))
library(tufte)
library(knitr)
library(janitor)
library(tidyr)
library(zoo)
library(lubridate)
library(hms)
library(dplyr)
library(ggplot2)
library(gtable)
library(grid)
library(ggpubr)
library(kableExtra)
library(scales)
library(hms)
library(stringr)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE,
cache.extra = packageVersion("tufte"),
tidy = FALSE
)
options(htmltools.dir.version = FALSE)
# FM <- read.csv("file:///C:/Users/christine.iyer/Box/MKT_output.csv", header = T, stringsAsFactors = F)
FM <- read.csv("file:///Z:/DAA/Marketing/MKT_output.csv", header = T, stringsAsFactors = F)
FM <- FM %>% filter(Master_Adname_Type == "NC")
FM <- FM %>% select(1:8, 13, 15:19, 21:24, 26, 28:29, 31:39) %>% select(Master_Date, everything())
#FM <- FM %>% mutate_at(9:30, ~replace(., is.na(.), 0)) %>% mutate(Master_Date = as.Date(Master_Date, format = "%m/%d/%Y")) %>% arrange(Master_Date)
FM <- FM %>% mutate_at(10:30, ~replace(., is.na(.), 0)) %>% mutate(Master_Date = as.Date(Master_Date, format = "%Y-%m-%d")) %>% arrange(Master_Date)
colorP <- c("#F6A704", "#0E1033","#4E7B14","#A92007","#D47E0A")
FMVM <- FM %>%
filter(Code_Product  %in% c("MPH","POL") & Master_Date > "2019-02-01") %>%
mutate(Product_Audience = paste0(Code_Product, "_", Code_Audience)) %>%
group_by(Code_Audience,Code_Product, Code_Vendor, Code_Medium,Week =cut(Master_Date + 1, "week")) %>%
summarise(
Cost = sum(Master_Cost),
Clicks = sum(Master_Clicks),
Impressions = round(sum(Master_Impressions),0),
#CTR = paste0(round(Clicks/Impressions * 100, 2), "%"),
Bounces = sum(Master_Bounces),
Sessions = sum(Master_Sessions),
UPV = sum(Master_Unique_Pageviews),
Views = sum(Master_Views),
Completions = sum(Master_Completions),
TOP = sum(Master_Time_On_Page),
Pageviews = sum(Master_Pageviews),
Exits = sum(Master_Exits),
Step1 = sum(TOP)/(sum(Pageviews)- sum(Exits)),
Av_TOP = round_hms(as_hms(Step1), 5),
ClickRatePct = round(Clicks/Impressions * 100, 2),
BounceRatePct = round(Bounces/Sessions * 100, 2),
ViewRate = round(Views/Impressions * 100, 2),
VTR = round(Completions/Impressions *100, 2),
ClickableCompletions = sum(Master_Clickable_Completions),
ClickableCompRate = round(Clicks/ClickableCompletions * 100, 2),
Swipes = sum(Master_Swipes),
SwipeUpRatePct = round(Swipes/Impressions * 100, 2),
Opens = sum(Master_Clicks_To_Site),
CTOR = round(Opens/Clicks * 100, 2),
Sends = sum(Master_Sends),
LIOpens = sum(Master_Opens),
LIClicks = sum(Master_Clicks_Sponsored_InMail),
OpenRate = round(LIOpens/Sends * 100, 2),
Engagements = sum(Master_Engagements),
EngagementRate = round(Engagements/Impressions * 100, 2),
EngRate = round((sum(LIOpens)+sum(Engagements))/sum(Sends)*100, 2),
LICTOR = round(sum(LIClicks)/sum(LIOpens) * 100, 2)) %>%
select(Week, Impressions, Clicks, Bounces, Sessions, Swipes, ClickRatePct, SwipeUpRatePct, UPV, BounceRatePct, TOP, Pageviews, Exits ,Step1,Av_TOP, ClickableCompRate, VTR, CTOR,OpenRate, Sends, ViewRate, ClickableCompletions, Completions, Opens, LIOpens, LIClicks, Engagements, LICTOR, EngRate, EngagementRate, Cost)
library(data.table)
New <- FMVM %>% group_by(Code_Product) %>%
summarise(Cost = paste0("$", sum(Cost))) %>%
transpose()
New <- New[-1,]
row.names(New) <- "Total Cost of Campaign"
New <- New %>% rename(MPH = V1, POL = V2)
New %>%
kable() %>%
kable_styling()
Product <- FMVM %>%
group_by(Code_Product) %>%
summarise(Impressions = sum(Impressions),
Cost = sum(Cost),
UPV = sum(UPV))
Vendor <- FMVM %>%
group_by(Code_Vendor) %>%
summarise(Impressions = sum(Impressions),
Cost = sum(Cost),
UPV = sum(UPV))
PercentCostVsUPV <- FMVM %>%
filter(Impressions > 36) %>%
mutate(Vendor_Product = paste0(Code_Product, "_", Code_Vendor)) %>%
group_by(Vendor_Product) %>%
summarise(TImpressions = sum(Impressions),
TCost = sum(Cost),
TUPV = sum(UPV)) %>%
mutate(PImp = round(TImpressions/sum(TImpressions),2),
PCost = round(TCost/sum(TCost),2),
PUPV = round(TUPV/sum(TUPV),2)) %>%
mutate(Product = ifelse(str_detect(Vendor_Product, "MPH"), "MPH", "POL"),
Vendor = ifelse(str_detect(Vendor_Product, "DBM"), "DBM",
ifelse(str_detect(Vendor_Product, "FB"), "FB", "LI"))) %>%
select(Vendor_Product, Vendor, Product, PCost, PUPV) %>%
gather(Metric, PctOfTotal, PCost:PUPV, factor_key=TRUE)
colorP <- c("#F6A704", "#0E1033","#4E7B14","#A92007","#D47E0A")
ggplot(PercentCostVsUPV, aes(x = Vendor, y = PctOfTotal  *100, fill = Product)) +
geom_bar(stat="identity", width = 0.7) +
facet_wrap(~Metric) +
labs(x = "", y = "Percent of Total")+
theme_minimal(base_size = 14) +
scale_fill_manual(values = colorP)
newNew <- FMVM %>%
mutate(Week = as.Date(Week, format = "%Y-%m-%d")) %>%
filter(Code_Vendor == "LI" & Impressions > 0) %>%
group_by(Code_Product) %>%
summarise(Impressions = sum(Impressions),
CTR = round(sum(Clicks)/sum(Impressions)*100,2),
BounceRate =round(sum(Bounces)/ sum(Sessions) * 100,2),
UPV = sum(UPV),
Cost = sum(Cost),
Step1 = sum(TOP)/(sum(Pageviews)- sum(Exits)),
Av_TOP = round_hms(as_hms(Step1), 5)
) %>%
gather(Metric, Value, Impressions:Av_TOP, factor_key=TRUE) %>%
spread(Code_Product, Value) %>% filter(Metric != "Step1")
# newNew %>%
#   # mutate(
#   #   POL = ifelse(POL < 1, paste0(POL, "%"), prettyNum(POL, big.mark = ",")),
#   #   MPH = ifelse(MPH < 1, paste0(MPH, "%"), prettyNum(MPH, big.mark = ","))) %>%
#   kable() %>%
#   kable_styling()
newNew[3,2] <- "95.16%"
newNew[3,3] <- "87.21%"
newNew[5,2] <- "$544.31"
newNew[5,3] <- "$702.83"
newNew[2,2] <- "0.47%"
newNew[2,3] <- "0.57%"
newNew[1,2] <- "19,418"
newNew[1,3] <- "22,397"
newNew[4,2] <- "64"
newNew[4,3] <- "87"
newNew[6,2] <- "00:06:45"
newNew[6,3] <- "00:05:00"
FY19_SP_LI <- newNew %>% mutate(Campaign = "FY19_SP_LI")
FY19_SP_LI <- FY19_SP_LI %>% mutate(Campaign = "FY19_SP_LI")
# mutate(
#   POL = ifelse(POL < 1, paste0(POL, "%"), prettyNum(POL, big.mark = ",")),
#   MPH = ifelse(MPH < 1, paste0(MPH, "%"), prettyNum(MPH, big.mark = ","))) %>%
FY19_SP_LI %>% select(Metric, MPH, POL) %>%
kable() %>%
kable_styling()
colorP <- c("#F6A704", "#0E1033","#4E7B14","#A92007","#D47E0A")
ggplot(PercentCostVsUPV, aes(x = Vendor, y = PctOfTotal  *100, fill = Product)) +
geom_bar(stat="identity", width = 0.7) +
facet_wrap(~Metric) +
labs(x = "", y = "Percent of Total")+
theme_minimal(base_size = 14) +
scale_fill_manual(values = colorP)
newNew <- FMVM %>%
mutate(Week = as.Date(Week, format = "%Y-%m-%d")) %>%
filter(Code_Vendor == "LI" & Impressions > 0) %>%
group_by(Code_Product) %>%
summarise(Impressions = sum(Impressions),
CTR = round(sum(Clicks)/sum(Impressions)*100,2),
BounceRate =round(sum(Bounces)/ sum(Sessions) * 100,2),
UPV = sum(UPV),
Cost = sum(Cost),
Step1 = sum(TOP)/(sum(Pageviews)- sum(Exits)),
Av_TOP = round_hms(as_hms(Step1), 5)
) %>%
gather(Metric, Value, Impressions:Av_TOP, factor_key=TRUE) %>%
spread(Code_Product, Value) %>% filter(Metric != "Step1")
# newNew %>%
#   # mutate(
#   #   POL = ifelse(POL < 1, paste0(POL, "%"), prettyNum(POL, big.mark = ",")),
#   #   MPH = ifelse(MPH < 1, paste0(MPH, "%"), prettyNum(MPH, big.mark = ","))) %>%
#   kable() %>%
#   kable_styling()
newNew[3,2] <- "95.16%"
newNew[3,3] <- "87.21%"
newNew[5,2] <- "$544.31"
newNew[5,3] <- "$702.83"
newNew[2,2] <- "0.47%"
newNew[2,3] <- "0.57%"
newNew[1,2] <- "19,418"
newNew[1,3] <- "22,397"
newNew[4,2] <- "64"
newNew[4,3] <- "87"
newNew[6,2] <- "00:06:45"
newNew[6,3] <- "00:05:00"
FY19_SP_LI <- newNew %>% mutate(Campaign = "FY19_SP_LI")
FY19_SP_LI <- FY19_SP_LI %>% mutate(Campaign = "FY19_SP_LI")
# mutate(
#   POL = ifelse(POL < 1, paste0(POL, "%"), prettyNum(POL, big.mark = ",")),
#   MPH = ifelse(MPH < 1, paste0(MPH, "%"), prettyNum(MPH, big.mark = ","))) %>%
FY19_SP_LI %>% select(Metric, MPH, POL) %>%
kable() %>%
kable_styling()
newNew <- FMVM %>%
mutate(Week = as.Date(Week, format = "%Y-%m-%d")) %>%
filter(Code_Vendor == "LI" & Impressions > 0) %>%
group_by(Code_Product) %>%
summarise(Impressions = sum(Impressions),
CTR = round(sum(Clicks)/sum(Impressions)*100,2),
BounceRate =round(sum(Bounces)/ sum(Sessions) * 100,2),
UPV = sum(UPV),
Cost = sum(Cost),
Step1 = sum(TOP)/(sum(Pageviews)- sum(Exits)),
Av_TOP = round_hms(as_hms(Step1), 5)
) %>%
gather(Metric, Value, Impressions:Av_TOP, factor_key=TRUE) %>%
spread(Code_Product, Value) %>% filter(Metric != "Step1")
newNew
FY19_SP_LI <- newNew %>% mutate(Campaign = "FY19_SP_LI")
FY19_SP_LI <- FY19_SP_LI %>% mutate(Campaign = "FY19_SP_LI")
# mutate(
#   POL = ifelse(POL < 1, paste0(POL, "%"), prettyNum(POL, big.mark = ",")),
#   MPH = ifelse(MPH < 1, paste0(MPH, "%"), prettyNum(MPH, big.mark = ","))) %>%
FY19_SP_LI %>% select(Metric, MPH, POL) %>%
kable() %>%
kable_styling()
knitr::opts_chunk$set(echo = TRUE)
library(googleAnalyticsR)
ga_auth()
my_accounts <- ga_account_list()
View(my_accounts)
ga_id <- 63145830
start_date <- "2020-03-10"
end_date <-  "2020-03-16"
campaign_filter <- dim_filter(dimension="campaign",operator="REGEXP",expressions="FY20")
my_filter_clause <- filter_clause_ga4(list(campaign_filter))
GA_thisWk <- google_analytics(ga_id, date_range = c(start_date, end_date),
metrics = c("uniquePageviews", "bounces", "timeOnPage", "sessions", "newUsers", "pageviews", "exits", "sessionDuration"),
dimensions = c("date", "landingPagePath","source", "medium", "adContent", "campaign", "region", "city"),
dim_filters = my_filter_clause,
anti_sample = TRUE
)
head(GA_thisWk)
tail(GA_thisWk)
unique(GA_thisWk$source)
#GA_thisWk %>% group_by(source) %>% summarise(UPV = sum(uniquePageviews))
write.csv(GA_thisWk, "C:/Users/christine.iyer/Box/FY20_Advertising/FY20_GoogleAnalytics/GoogleAnalytics_03-10-20.csv", row.names = F)
write.csv(GA_thisWk, "file:///C:/FileMaker/Uploads/GoogleAnalytics.csv", row.names = FALSE)
